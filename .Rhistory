#'
#' @return The results from MyLM
#' @export
#'
#' @examples TwinData<-DFSimulated(2000,2000,.3,.3)
#' p<-TwinData[,1]
#' s<-TwinData[,2]
#' r<-TwinData[,3]
#' DFanalysis(data=NULL, p,s,r)
DFanalysis<-function(data=NULL, proband, sibling, Rs, Ds=NULL, RK=T, robust=T, DE=T, betasonly=F, typicalSE=F){
#DFRK stands for Defries Fulker, Rodgers Kohler formulation
if(!is.null(data)){
proband<-data[,proband]
sibling<-data[,sibling]
Rs<-data[,Rs]
if(!is.null(Ds)){
Ds<-data[,Ds]
}
}
if(!is.null(Ds)){
RK<-F
}
if(RK){
data<-RK(proband, sibling, Rs, DE)
DF<-MyLM(data$proband,data[,c("a2", "c2")], robust, betasonly, typicalSE)
} else if(!is.null(Ds)){ #This fits the standard DF model if the Rodgers and Kohler model is not specified
X<-cbind(rep(1,length(sibling)),sibling,Rs,sibling*Rs)
DF<-MyLM(proband,X, robust, betasonly)
}else{
X<-cbind(rep(1,length(sibling)),Rs,sibling*Rs, sibling*Ds)
X<-as.data.frame(X)
names(X)<-c("intercept","X","a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}
return(DF)
}
DFanalysis(data=NULL, p,s,r,Ds=rep(1,.25,each=2000))
RK
#' DFanalysis
#'
#'There are three possible models to be fit. The default is the Rodgers and Kohler formulation of the DF model (Rodgers & Kohler, 2005). The non-default (if RK=F), is to fit the original DeFries-Fulker model. The third option is only used when dominance coefficients are provided, and is based on the formulation by Waller (Waller 1994).
#'
#' @param data A dataframe. This is not necessary as the variables can be passed directly via the other arguments.
#' @param proband Called "proband" for historical reasons this is the variable on the left hand side of the regression.
#' @param sibling The right hand side version of proband. This would be the matched sibling scores.
#' @param Rs This is the vector of relatedness coefficients
#' @param Ds A vector of dominance coefficients. 1 for MZ twins, .25 for DZ twins and full siblings. The default is null, and no value should be provided if using the ACE model. This should only have a non-null value when fitting an ADE model
#' @param RK Use the Rodgers and Kohler simplified version of the DF model (recommended). Data should not be double entered prior to analysis.
#' @param robust Use the Kohler and Rodgers robust standard errors (recommeneded when using double entered data)
#' @param DE Will the data need to be double entered?
#' @param betasonly If TRUE only the beta weights from the regression analysis will be returned.
#' @param typicalSE Should the typical regression standard errors be used? Default is false.
#'
#' @return The results from MyLM
#' @export
#'
#' @examples TwinData<-DFSimulated(2000,2000,.3,.3)
#' p<-TwinData[,1]
#' s<-TwinData[,2]
#' r<-TwinData[,3]
#' DFanalysis(data=NULL, p,s,r)
DFanalysis<-function(data=NULL, proband, sibling, Rs, Ds=NULL, RK=T, robust=T, DE=T, betasonly=F, typicalSE=F){
#DFRK stands for Defries Fulker, Rodgers Kohler formulation
if(!is.null(data)){
proband<-data[,proband]
sibling<-data[,sibling]
Rs<-data[,Rs]
if(!is.null(Ds)){
Ds<-data[,Ds]
}
}
if(!is.null(Ds)){
RK<-F
}
if(RK){
data<-RK(proband, sibling, Rs, DE)
DF<-MyLM(data$proband,data[,c("a2", "c2")], robust, betasonly, typicalSE)
} else if(is.null(Ds)){ #This fits the standard DF model if the Rodgers and Kohler model is not specified
X<-cbind(rep(1,length(sibling)),sibling,Rs,sibling*Rs)
DF<-MyLM(proband,X, robust, betasonly)
}else{
X<-cbind(rep(1,length(sibling)),Rs,sibling*Rs, sibling*Ds)
X<-as.data.frame(X)
names(X)<-c("intercept","X","a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}
return(DF)
}
DFanalysis(data=NULL, p,s,r,Ds=rep(1,.25,each=2000))
proband<-p
sibling<-s
Rs<-Rs
Rs<-r
DFanalysis(data=NULL, p,s,r,Ds=rep(c(1,.25),each=2000))
RK<-T
!RK
RK
library(Omisc)
RK
Omisc::RK
doubleEnter()
doubleEnter
#' DFanalysis
#'
#'There are three possible models to be fit. The default is the Rodgers and Kohler formulation of the DF model (Rodgers & Kohler, 2005). The non-default (if RK=F), is to fit the original DeFries-Fulker model. The third option is only used when dominance coefficients are provided, and is based on the formulation by Waller (Waller 1994).
#'
#' @param data A dataframe. This is not necessary as the variables can be passed directly via the other arguments.
#' @param proband Called "proband" for historical reasons this is the variable on the left hand side of the regression.
#' @param sibling The right hand side version of proband. This would be the matched sibling scores.
#' @param Rs This is the vector of relatedness coefficients
#' @param Ds A vector of dominance coefficients. 1 for MZ twins, .25 for DZ twins and full siblings. The default is null, and no value should be provided if using the ACE model. This should only have a non-null value when fitting an ADE model
#' @param RK Use the Rodgers and Kohler simplified version of the DF model (recommended). Data should not be double entered prior to analysis.
#' @param robust Use the Kohler and Rodgers robust standard errors (recommeneded when using double entered data)
#' @param DE Will the data need to be double entered?
#' @param betasonly If TRUE only the beta weights from the regression analysis will be returned.
#' @param typicalSE Should the typical regression standard errors be used? Default is false.
#'
#' @return The results from MyLM
#' @export
#'
#' @examples TwinData<-DFSimulated(2000,2000,.3,.3)
#' p<-TwinData[,1]
#' s<-TwinData[,2]
#' r<-TwinData[,3]
#' DFanalysis(data=NULL, p,s,r)
DFanalysis<-function(data=NULL, proband, sibling, Rs, Ds=NULL, RK=T, robust=T, DE=T, betasonly=F, typicalSE=F){
#DFRK stands for Defries Fulker, Rodgers Kohler formulation
if(!is.null(data)){
proband<-data[,proband]
sibling<-data[,sibling]
Rs<-data[,Rs]
if(!is.null(Ds)){
Ds<-data[,Ds]
}
}
if(RK & is.null(Ds)){
data<-RK(proband, sibling, Rs, DE)
DF<-MyLM(data$proband,data[,c("a2", "c2")], robust, betasonly, typicalSE)
} else if(is.null(Ds) & !RK){ #This fits the standard DF model if the Rodgers and Kohler model is not specified
X<-cbind(rep(1,length(sibling)),sibling,Rs,sibling*Rs)
DF<-MyLM(proband,X, robust, betasonly)
}else if(!is.null(DS) & !RK){
X<-cbind(rep(1,length(sibling)),Rs,sibling*Rs, sibling*Ds)
X<-as.data.frame(X)
names(X)<-c("intercept","X","a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}else if(!is.null(DS) & RK){
probandDoub<-c(proband,sibling)
siblingDoub<-c(sibling,proband)
Rs<-rep(Rs,2)
Ds<-rep(Ds,2)
proband<-probandDoub-mean(probandDoub)
sibling<-siblingDoub-mean(siblingDoub)
X<-cbind(sibling*Rs,sibling*Ds)
colnames(X)<-c("a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}
return(DF)
}
DFanalysis(data=NULL, p,s,r,Ds=rep(c(1,.25),each=2000))
#' DFanalysis
#'
#'There are three possible models to be fit. The default is the Rodgers and Kohler formulation of the DF model (Rodgers & Kohler, 2005). The non-default (if RK=F), is to fit the original DeFries-Fulker model. The third option is only used when dominance coefficients are provided, and is based on the formulation by Waller (Waller 1994).
#'
#' @param data A dataframe. This is not necessary as the variables can be passed directly via the other arguments.
#' @param proband Called "proband" for historical reasons this is the variable on the left hand side of the regression.
#' @param sibling The right hand side version of proband. This would be the matched sibling scores.
#' @param Rs This is the vector of relatedness coefficients
#' @param Ds A vector of dominance coefficients. 1 for MZ twins, .25 for DZ twins and full siblings. The default is null, and no value should be provided if using the ACE model. This should only have a non-null value when fitting an ADE model
#' @param RK Use the Rodgers and Kohler simplified version of the DF model (recommended). Data should not be double entered prior to analysis.
#' @param robust Use the Kohler and Rodgers robust standard errors (recommeneded when using double entered data)
#' @param DE Will the data need to be double entered?
#' @param betasonly If TRUE only the beta weights from the regression analysis will be returned.
#' @param typicalSE Should the typical regression standard errors be used? Default is false.
#'
#' @return The results from MyLM
#' @export
#'
#' @examples TwinData<-DFSimulated(2000,2000,.3,.3)
#' p<-TwinData[,1]
#' s<-TwinData[,2]
#' r<-TwinData[,3]
#' DFanalysis(data=NULL, p,s,r)
DFanalysis<-function(data=NULL, proband, sibling, Rs, Ds=NULL, RK=T, robust=T, DE=T, betasonly=F, typicalSE=F){
#DFRK stands for Defries Fulker, Rodgers Kohler formulation
if(!is.null(data)){
proband<-data[,proband]
sibling<-data[,sibling]
Rs<-data[,Rs]
if(!is.null(Ds)){
Ds<-data[,Ds]
}
}
if(RK & is.null(Ds)){
data<-RK(proband, sibling, Rs, DE)
DF<-MyLM(data$proband,data[,c("a2", "c2")], robust, betasonly, typicalSE)
} else if(is.null(Ds) & !RK){ #This fits the standard DF model if the Rodgers and Kohler model is not specified
X<-cbind(rep(1,length(sibling)),sibling,Rs,sibling*Rs)
DF<-MyLM(proband,X, robust, betasonly)
}else if(!is.null(Ds) & !RK){
X<-cbind(rep(1,length(sibling)),Rs,sibling*Rs, sibling*Ds)
X<-as.data.frame(X)
names(X)<-c("intercept","X","a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}else if(!is.null(Ds) & RK){
probandDoub<-c(proband,sibling)
siblingDoub<-c(sibling,proband)
Rs<-rep(Rs,2)
Ds<-rep(Ds,2)
proband<-probandDoub-mean(probandDoub)
sibling<-siblingDoub-mean(siblingDoub)
X<-cbind(sibling*Rs,sibling*Ds)
colnames(X)<-c("a2","d2")
DF<-MyLM(proband,X,robust, betasonly)
}
return(DF)
}
DFanalysis(data=NULL, p,s,r,Ds=rep(c(1,.25),each=2000))
DFanalysis(data=NULL, p,s,r,Ds=rep(c(1,.25),each=2000),RK=F)
dzcor<-matrix(c(1,.25,1,.25),nrow=2)
dzchol<-chol(dzcor)
dzcor
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzchol<-chol(dzcor)
dzcor
library(MASS)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
library(MASS)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds")
library(MASS)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds", RK=F)
library(MASS)
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds", RK=F)
library(MASS)
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds")
library(MASS)
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs")#,Ds="Ds")
library(MASS)
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds")
library(MASS)
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(1000,c(0,0),dzcor)
mzdata<-rnorm(1000)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=1000)
data$Ds<-rep(c(1,.25),each=1000)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=F)
library(MASS)
n=10000
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=F)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
library(MASS)
results<-c()
for(i in 1:1000){
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
result<-DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
results<-rbind(results,result[,1])
}
hist(results[,2])
mean(results[,2])
library(MASS)
results<-c()
for(i in 1:10000){
n=100
dzcor<-matrix(c(1,.25,.25,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
result<-DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
results<-rbind(results,result[,1])
}
mean(results[,2])
mean(results[,1])
library(MASS)
results<-c()
for(i in 1:10000){
n=100
dzcor<-matrix(c(1,.375,.375,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
result<-DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=T)
results<-rbind(results,result[,1])
}
mean(results[,2])
mean(results[,1])
library(MASS)
results<-c()
for(i in 1:10000){
n=100
dzcor<-matrix(c(1,.375,.375,1),nrow=2)
dzdata<-mvrnorm(n,c(0,0),dzcor)
mzdata<-rnorm(n)
mzdata<-cbind(mzdata,mzdata)
data<-rbind(mzdata,dzdata)
data<-as.data.frame(data)
names(data)<-c("sibling","proband")
data$Rs<-rep(c(1,.5),each=n)
data$Ds<-rep(c(1,.25),each=n)
result<-DFanalysis(data=data,proband = "proband",sibling="sibling",Rs="Rs",Ds="Ds",RK=F)
results<-rbind(results,result[,1])
}
mean(results[,2])
mean(results[,3])
result
mean(results[,3])
mean(results[,4])
library(Omisc)
library(Omisc)
?bootAnalysis
?NaiveBoot
Sys.time()
data<-DFSimulated()
boots<-NaiveBoot(data, groups="Rs", keepgroups=TRUE, B=100)
boots<-bootAnalysis(boots, cbind, DFanalysis,1,2,3,TRUE,FALSE,TRUE,TRUE,FALSE)
apply(boots,1, standardBootIntervals)
DFanalysis(data,1,2,3)
Sys.time()
Sys.time()
data<-DFSimulated()
boots<-NaiveBoot(data, groups="Rs", keepgroups=TRUE, B=1000)
boots<-bootAnalysis(boots, cbind, DFanalysis,1,2,3,TRUE,FALSE,TRUE,TRUE,FALSE)
apply(boots,1, standardBootIntervals)
DFanalysis(data,1,2,3)
Sys.time()
library(Omisc)
