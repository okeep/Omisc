}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
test<-list()
start<-Sys.time()
for(i in 1:1000){
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
X<-bootAnalysis(X,cbind,BarebonesBetas)
test[[i]]<-cbind(results,AllBootResults(X,data=data, FUN=BarebonesBetas))
print(Sys.time()-start)
print(i)
}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
?matrix
?dim
dim(X)
dim(I(3))
I(3)
i(3)
identity(3)
dim(diag(3))
X<-diag(3)
dim(X)<-4
dim(X)<-c(4,4)
x <- 1:12 ; dim(x) <- c(3,4)
x
# simple versions of nrow and ncol could be defined as follows
nrow0 <- function(x) dim(x)[1]
ncol0 <- function(x) dim(x)[2]
library(Omisc)
test<-list()
start<-Sys.time()
for(i in 1:1000){
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
X<-bootAnalysis(X,cbind,BarebonesBetas)
test[[i]]<-cbind(results,AllBootResults(X,data=data, FUN=BarebonesBetas))
print(Sys.time()-start)
print(i)
}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
test<-list()
start<-Sys.time()
for(i in 1:1000){
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
X<-bootAnalysis(X,cbind,BarebonesBetas)
test[[i]]<-AllBootResults(X,data=data, FUN=BarebonesBetas)
print(Sys.time()-start)
print(i)
}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
head(X)
test<-list()
start<-Sys.time()
for(i in 1:1000){
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
X<-bootAnalysis(X,cbind,BarebonesBetas)
test[[i]]<-AllBootResults(X,data=data[,1:2], FUN=BarebonesBetas)
print(Sys.time()-start)
print(i)
}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
X[1:10]
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
head(X[[]])
head(X[[1]])
?MyLM
test<-list()
start<-Sys.time()
for(i in 1:1000){
X<-c(rnorm(100,mean=5, sd=2/5))
Y<-5*X+c(rnorm(100,sd=sqrt(12)))
data<-cbind(Y,X)
data<-as.data.frame(data)
results<-MyLM(data[,1], data[,2])
X<-uniboot(data,1000, keepgroups = T, sampleframe = "group")
X<-bootAnalysis(X,cbind,BarebonesBetas)
test[[i]]<-AllBootResults(X,data=data, FUN=BarebonesBetas)
print(Sys.time()-start)
print(i)
}
test<-do.call(rbind,test)
head(test)
mean(test[,1])
sum(5.00>=test[,"standard 0.025 CI"]& 5.00<=test[,"standard 0.975 CI"])
sum(5.00>=test[,"lower BCa CIboot"]& 5.00<=test[,"upper BCa CIboot"])
sum(5.00>=test[,"lower BCa CIjack"]& 5.00<=test[,"upper BCa CIjack"])
sum(5.00>=test[,"Typical Lower CI"]& 5.00<=test[,"Typical Upper CI"])
library(Omisc)
set.seed(2^7-1)
start<-Sys.time()
ac<-matrix(c(.3,.69),nrow=1)
colnames(ac)<-c("a2","c2")
MZns<-166
DZns<-332
ac<-cbind(ac,MZns,DZns)
i<-1
while(i<nrow(ac)+1){
simulationresults<-list()
j<-1
while(j<1001){
data<-DFSimulatedChisq(MZ=ac[i,3], DZ=ac[i,4], a2=ac[i,1], c2=ac[i,2], df=10)
rStandard<-DFanalysis(data,1,2,3, typicalSE =T)
NaivebootDEA<-NaiveBoot(data,1000,"Rs",T) #Naive bootstrap DEA
NaivebootDEA<-bootAnalysis(NaivebootDEA, cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
NaivebootDEA<-AllBootResults(NaivebootDEA,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
colnames(NaivebootDEA)<-paste("Standard DEA Bootstrap", colnames(NaivebootDEA), sep=" ")
results<-cbind(rStandard,NaivebootDEA[,-1])
#Univariate DEA within group
UnibootWGSDEA<-uniboot(data,1000,"Rs",T,1)
UnibootWGSDEA<-bootAnalysis(UnibootWGSDEA,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
UnibootWGSDEA<-AllBootResults(UnibootWGSDEA,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
colnames(UnibootWGSDEA)<-paste("Univariate DEA WGS Bootstrap", colnames(UnibootWGSDEA), sep = " ")
results<-cbind(results,UnibootWGSDEA[,-1])
#Univariate DEA Ungrouped
UnibootUGSDEA<-uniboot(data,1000,"Rs",T,1, sampleframe = "whole")
UnibootUGSDEA<-bootAnalysis(UnibootUGSDEA,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
UnibootUGSDEA<-AllBootResults(UnibootUGSDEA,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=T, betasonly=T)
colnames(UnibootUGSDEA)<-paste("Univariate DEA UGS Bootstrap", colnames(UnibootUGSDEA), sep = " ")
results<-cbind(results,UnibootUGSDEA[,-1])
#Double entered before bootstrapping DEB
#Naive boot DEB sample size equal to half double entered
data<-doubleEnter(data[,1],data[,2],data[,3])
NaivebootDEB.5<-NaiveBoot(data,1000,"Rs",T,size=.5)
NaivebootDEB.5<-bootAnalysis(NaivebootDEB.5, cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
NaivebootDEB.5<-AllBootResults(NaivebootDEB.5,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(NaivebootDEB.5)<-paste("Standard DEB .5 Bootstrap", colnames(NaivebootDEB.5), sep=" ")
results<-cbind(results,NaivebootDEB.5[,-1])
#Naive boot DEB sample size equal to whole double entered
NaivebootDEB1<-NaiveBoot(data,1000,"Rs",T,size=1)
NaivebootDEB1<-bootAnalysis(NaivebootDEB1, cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
NaivebootDEB1<-AllBootResults(NaivebootDEB1,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(NaivebootDEB1)<-paste("Standard DEB 1 Bootstrap", colnames(NaivebootDEB1), sep=" ")
results<-cbind(results,NaivebootDEB1[,-1])
#Univariate boot DEB, half sample, within groups
UnibootWGSDEB.5<-uniboot(data,1000,"Rs",T,.5)
UnibootWGSDEB.5<-bootAnalysis(UnibootWGSDEB.5,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
UnibootWGSDEB.5<-AllBootResults(UnibootWGSDEB.5,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(UnibootWGSDEB.5)<-paste("Univariate DEB .5 WGS Bootstrap", colnames(UnibootWGSDEB.5), sep = " ")
results<-cbind(results,UnibootWGSDEB.5[,-1])
#Univariate boot DEB, full sample, within groups
UnibootWGSDEB1<-uniboot(data,1000,"Rs",T,1)
UnibootWGSDEB1<-bootAnalysis(UnibootWGSDEB1,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
UnibootWGSDEB1<-AllBootResults(UnibootWGSDEB1,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(UnibootWGSDEB1)<-paste("Univariate DEB 1 WGS Bootstrap", colnames(UnibootWGSDEB1), sep = " ")
results<-cbind(results,UnibootWGSDEB1[,-1])
#Univariate boot DEB, half sample, ungrouped
UnibootUGSDEB.5<-uniboot(data,1000,"Rs",T,.5, sampleframe = "whole")
UnibootUGSDEB.5<-bootAnalysis(UnibootUGSDEB.5,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
UnibootUGSDEB.5<-AllBootResults(UnibootUGSDEB.5,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(UnibootUGSDEB.5)<-paste("Univariate DEB .5 UGS Bootstrap", colnames(UnibootUGSDEB.5), sep = " ")
results<-cbind(results,UnibootUGSDEB.5[,-1])
#Univariate boot DEB, full sample, ungrouped
UnibootUGSDEB1<-uniboot(data,1000,"Rs",T,1, sampleframe = "whole")
UnibootUGSDEB1<-bootAnalysis(UnibootUGSDEB1,cbind, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
UnibootUGSDEB1<-AllBootResults(UnibootUGSDEB1,.025,.975, data, DFanalysis,1,2,3, RK=T, robust=F, DE=F, betasonly=T)
colnames(UnibootUGSDEB1)<-paste("Univariate DEB 1 UGS Bootstrap", colnames(UnibootUGSDEB1), sep = " ")
results<-cbind(results,UnibootUGSDEB1[,-1])
a2<-ac[i,1]
c2<-ac[i,2]
MZ<-ac[i,3]
DZ<-ac[i,4]
results<-cbind(results,a2,c2,MZ,DZ)
simulationresults[[j]]<-results
j<-j+1
print(paste("simulation", (i-1)*1000+(j-1), "completed. Time elapsed is", Sys.time()-start, sep=" "))
}
i<-i+1
}
save.image("C:/Users/Patrick/Google Drive/Grad projects_classes/Behavioral Genetics/Thesis/Simulation Results/temp.RData")
head(samples[[1]])
head(simulationresults[[1]])
library(plotly)
start<-Sys.time()
ac<-matrix(c(.3,.69),nrow=1)
colnames(ac)<-c("a2","c2")
MZns<-166
DZns<-332
ac<-cbind(ac,MZns,DZns)
columnNames<-c("Betas", "Robust SE", "Robust Lower CI", "Robust Upper CI", "Typical SE", "Typical Lower CI", "Typical Upper CI",
"Standard DEA Bootstrap mean", "Standard DEA Bootstrap median", "Standard DEA Bootstrap min", "Standard DEA Bootstrap max",
"Standard DEA Bootstrap standard 0.025 CI", "Standard DEA Bootstrap standard 0.975 CI",
"Standard DEA Bootstrap lower BCa CIboot", "Standard DEA Bootstrap upper BCa CIboot", "Standard DEA Bootstrap biasboot",
"Standard DEA Bootstrap accellerationboot", "Standard DEA Bootstrap lower BCa CIjack",
"Standard DEA Bootstrap upper BCa CIjack", "Standard DEA Bootstrap biasjack", "Standard DEA Bootstrap accellerationjack",
"Univariate DEA WGS Bootstrap mean", "Univariate DEA WGS Bootstrap median", "Univariate DEA WGS Bootstrap min",
"Univariate DEA WGS Bootstrap max", "Univariate DEA WGS Bootstrap standard 0.025 CI",
"Univariate DEA WGS Bootstrap standard 0.975 CI", "Univariate DEA WGS Bootstrap lower BCa CIboot",
"Univariate DEA WGS Bootstrap upper BCa CIboot", "Univariate DEA WGS Bootstrap biasboot",
"Univariate DEA WGS Bootstrap accellerationboot", "Univariate DEA WGS Bootstrap lower BCa CIjack",
"Univariate DEA WGS Bootstrap upper BCa CIjack", "Univariate DEA WGS Bootstrap biasjack",
"Univariate DEA WGS Bootstrap accellerationjack", "Univariate DEA UGS Bootstrap mean",
"Univariate DEA UGS Bootstrap median", "Univariate DEA UGS Bootstrap min", "Univariate DEA UGS Bootstrap max",
"Univariate DEA UGS Bootstrap standard 0.025 CI", "Univariate DEA UGS Bootstrap standard 0.975 CI",
"Univariate DEA UGS Bootstrap lower BCa CIboot", "Univariate DEA UGS Bootstrap upper BCa CIboot",
"Univariate DEA UGS Bootstrap biasboot", "Univariate DEA UGS Bootstrap accellerationboot",
"Univariate DEA UGS Bootstrap lower BCa CIjack", "Univariate DEA UGS Bootstrap upper BCa CIjack",
"Univariate DEA UGS Bootstrap biasjack", "Univariate DEA UGS Bootstrap accellerationjack",
"Standard DEB .5 Bootstrap mean", "Standard DEB .5 Bootstrap median", "Standard DEB .5 Bootstrap min",
"Standard DEB .5 Bootstrap max", "Standard DEB .5 Bootstrap standard 0.025 CI",
"Standard DEB .5 Bootstrap standard 0.975 CI", "Standard DEB .5 Bootstrap lower BCa CIboot",
"Standard DEB .5 Bootstrap upper BCa CIboot", "Standard DEB .5 Bootstrap biasboot",
"Standard DEB .5 Bootstrap accellerationboot", "Standard DEB .5 Bootstrap lower BCa CIjack",
"Standard DEB .5 Bootstrap upper BCa CIjack", "Standard DEB .5 Bootstrap biasjack",
"Standard DEB .5 Bootstrap accellerationjack", "Standard DEB 1 Bootstrap mean", "Standard DEB 1 Bootstrap median",
"Standard DEB 1 Bootstrap min", "Standard DEB 1 Bootstrap max", "Standard DEB 1 Bootstrap standard 0.025 CI",
"Standard DEB 1 Bootstrap standard 0.975 CI", "Standard DEB 1 Bootstrap lower BCa CIboot",
"Standard DEB 1 Bootstrap upper BCa CIboot", "Standard DEB 1 Bootstrap biasboot",
"Standard DEB 1 Bootstrap accellerationboot", "Standard DEB 1 Bootstrap lower BCa CIjack",
"Standard DEB 1 Bootstrap upper BCa CIjack", "Standard DEB 1 Bootstrap biasjack",
"Standard DEB 1 Bootstrap accellerationjack", "Univariate DEB .5 WGS Bootstrap mean",
"Univariate DEB .5 WGS Bootstrap median", "Univariate DEB .5 WGS Bootstrap min", "Univariate DEB .5 WGS Bootstrap max",
"Univariate DEB .5 WGS Bootstrap standard 0.025 CI", "Univariate DEB .5 WGS Bootstrap standard 0.975 CI",
"Univariate DEB .5 WGS Bootstrap lower BCa CIboot", "Univariate DEB .5 WGS Bootstrap upper BCa CIboot",
"Univariate DEB .5 WGS Bootstrap biasboot", "Univariate DEB .5 WGS Bootstrap accellerationboot",
"Univariate DEB .5 WGS Bootstrap lower BCa CIjack", "Univariate DEB .5 WGS Bootstrap upper BCa CIjack",
"Univariate DEB .5 WGS Bootstrap biasjack", "Univariate DEB .5 WGS Bootstrap accellerationjack",
"Univariate DEB 1 WGS Bootstrap mean", "Univariate DEB 1 WGS Bootstrap median", "Univariate DEB 1 WGS Bootstrap min",
"Univariate DEB 1 WGS Bootstrap max", "Univariate DEB 1 WGS Bootstrap standard 0.025 CI",
"Univariate DEB 1 WGS Bootstrap standard 0.975 CI", "Univariate DEB 1 WGS Bootstrap lower BCa CIboot",
"Univariate DEB 1 WGS Bootstrap upper BCa CIboot", "Univariate DEB 1 WGS Bootstrap biasboot",
"Univariate DEB 1 WGS Bootstrap accellerationboot", "Univariate DEB 1 WGS Bootstrap lower BCa CIjack",
"Univariate DEB 1 WGS Bootstrap upper BCa CIjack", "Univariate DEB 1 WGS Bootstrap biasjack",
"Univariate DEB 1 WGS Bootstrap accellerationjack", "Univariate DEB .5 UGS Bootstrap mean",
"Univariate DEB .5 UGS Bootstrap median", "Univariate DEB .5 UGS Bootstrap min", "Univariate DEB .5 UGS Bootstrap max",
"Univariate DEB .5 UGS Bootstrap standard 0.025 CI", "Univariate DEB .5 UGS Bootstrap standard 0.975 CI",
"Univariate DEB .5 UGS Bootstrap lower BCa CIboot", "Univariate DEB .5 UGS Bootstrap upper BCa CIboot",
"Univariate DEB .5 UGS Bootstrap biasboot", "Univariate DEB .5 UGS Bootstrap accellerationboot",
"Univariate DEB .5 UGS Bootstrap lower BCa CIjack", "Univariate DEB .5 UGS Bootstrap upper BCa CIjack",
"Univariate DEB .5 UGS Bootstrap biasjack", "Univariate DEB .5 UGS Bootstrap accellerationjack",
"Univariate DEB 1 UGS Bootstrap mean", "Univariate DEB 1 UGS Bootstrap median", "Univariate DEB 1 UGS Bootstrap min",
"Univariate DEB 1 UGS Bootstrap max", "Univariate DEB 1 UGS Bootstrap standard 0.025 CI",
"Univariate DEB 1 UGS Bootstrap standard 0.975 CI", "Univariate DEB 1 UGS Bootstrap lower BCa CIboot",
"Univariate DEB 1 UGS Bootstrap upper BCa CIboot", "Univariate DEB 1 UGS Bootstrap biasboot",
"Univariate DEB 1 UGS Bootstrap accellerationboot", "Univariate DEB 1 UGS Bootstrap lower BCa CIjack",
"Univariate DEB 1 UGS Bootstrap upper BCa CIjack", "Univariate DEB 1 UGS Bootstrap biasjack",
"Univariate DEB 1 UGS Bootstrap accellerationjack", "a2", "c2", "MZ", "DZ")
UpperIntervals<-(regexpr("upper BCa CIjack", columnNames, ignore.case = T)>0)+ (regexpr("standard 0.975", columnNames)>0)+(regexpr("Upper", columnNames, ignore.case = F)>0)
LowerIntervals<-(regexpr("lower BCa CIjack", columnNames, ignore.case = T)>0)+ (regexpr("standard 0.025", columnNames)>0)+(regexpr("Lower", columnNames, ignore.case = F)>0)
width<-function(data,UpperIntervals,LowerIntervals){
Upper<-data[,UpperIntervals==1]
Lower<-data[,LowerIntervals==1]
widths<-Upper-Lower
widths<-apply(widths,2,mean)
cols<-names(widths)
cols<-sub("upper","width",cols)
cols<-sub("0.975", "width", cols)
names(widths)<-cols
return(widths)
}
sumna<-function(data){
data<-sum(na.omit(data))/length(na.omit(data))
}
PopInside<-function(data, UpperIntervals, LowerIntervals,pop){
Upper<-data[,UpperIntervals==1]
Lower<-data[,LowerIntervals==1]
reps<-nrow(Upper)
Upper<-pop<=Upper
Lower<-pop>=Lower
inside<-Upper==Lower
inside<-apply(inside,2,sumna)
#inside<-inside/reps
cols<-names(inside)
cols<-sub("upper","coverage",cols)
cols<-sub("0.975", "coverage", cols)
names(inside)<-cols
return(inside)
}
resultschi10<-c()
test<-list(1:6)
chi10<-c()
namesforlist<-c()
for(i in c(1)){
namesforlist<-c(namesforlist,paste("chi10", ac[i,1],ac[i,2],ac[i,3],ac[i,4], sep=""))
}
for(i in c(1)){
tmp<-paste("chi10", ac[i,1],ac[i,2],ac[i,3],ac[i,4], sep="")
test[[i]]<-simulationresults
test[[i]]<-do.call(rbind,test[[i]])
colnames(test[[i]])<-columnNames
resultschi10<-rbind(resultschi10,c(PopInside(test[[i]][rownames(test[[i]])=="a2",],UpperIntervals, LowerIntervals, pop=ac[i,1]),tmp,"a2"))
resultschi10<-rbind(resultschi10,c(PopInside(test[[i]][rownames(test[[i]])=="c2",],UpperIntervals, LowerIntervals, pop=ac[i,2]),tmp,"c2"))
chi10<-rbind(chi10,test[[i]])
}
colnames(resultschi10)[21:22]<-c("condition","parameter")
resultschi10[,1:20]<-apply(resultschi10[,1:20], 2, as.numeric)
resultschi10<-as.data.frame(resultschi10)
#resultschi10$condition<-c(1:nrow(resultschi10))
plot<-function(data,ac){
dataused<-paste(deparse(substitute(data)),"[",deparse(substitute(data)),"$parameter=='",ac,"',]", sep="")
base<-paste("plot_ly(data=",dataused,", x=",dataused,"$condition)%>%
add_lines(y=0.95, name='nominal', color=I('black'))%>%",sep="")
names<-colnames(data)
colors<-rainbow_hcl(length(names)-1)
i<-1
while (i <length(names)-2){
base<-paste(base, "
add_markers(y=",dataused,"$`",names[i], "`,name='",names[i],"',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
add_lines(y=mean(na.omit(",dataused,"$`",names[i], "`)),name='",names[i]," line',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%", sep="")
i<-i+1
}
base<-paste(base, "
add_markers(y=",dataused,"$`",names[i], "`,name='",names[i],"',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
add_lines(y=mean(na.omit(",dataused,"$`",names[i], "`)),name='",names[i]," line',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
layout(title='",deparse(substitute(data)),ac,"')", sep="")
return(base)
}
chi10Plota2<-eval(parse(text=plot(resultschi10,"a2")))
chi10Plotc2<-eval(parse(text=plot(resultschi10,"c2")))
subplot(chi10Plota2, chi10Plotc2, nrows=1, shareY = T)
library(colorspace)
library(plotly)
library(colorspace)
start<-Sys.time()
ac<-matrix(c(.3,.69),nrow=1)
colnames(ac)<-c("a2","c2")
MZns<-166
DZns<-332
ac<-cbind(ac,MZns,DZns)
columnNames<-c("Betas", "Robust SE", "Robust Lower CI", "Robust Upper CI", "Typical SE", "Typical Lower CI", "Typical Upper CI",
"Standard DEA Bootstrap mean", "Standard DEA Bootstrap median", "Standard DEA Bootstrap min", "Standard DEA Bootstrap max",
"Standard DEA Bootstrap standard 0.025 CI", "Standard DEA Bootstrap standard 0.975 CI",
"Standard DEA Bootstrap lower BCa CIboot", "Standard DEA Bootstrap upper BCa CIboot", "Standard DEA Bootstrap biasboot",
"Standard DEA Bootstrap accellerationboot", "Standard DEA Bootstrap lower BCa CIjack",
"Standard DEA Bootstrap upper BCa CIjack", "Standard DEA Bootstrap biasjack", "Standard DEA Bootstrap accellerationjack",
"Univariate DEA WGS Bootstrap mean", "Univariate DEA WGS Bootstrap median", "Univariate DEA WGS Bootstrap min",
"Univariate DEA WGS Bootstrap max", "Univariate DEA WGS Bootstrap standard 0.025 CI",
"Univariate DEA WGS Bootstrap standard 0.975 CI", "Univariate DEA WGS Bootstrap lower BCa CIboot",
"Univariate DEA WGS Bootstrap upper BCa CIboot", "Univariate DEA WGS Bootstrap biasboot",
"Univariate DEA WGS Bootstrap accellerationboot", "Univariate DEA WGS Bootstrap lower BCa CIjack",
"Univariate DEA WGS Bootstrap upper BCa CIjack", "Univariate DEA WGS Bootstrap biasjack",
"Univariate DEA WGS Bootstrap accellerationjack", "Univariate DEA UGS Bootstrap mean",
"Univariate DEA UGS Bootstrap median", "Univariate DEA UGS Bootstrap min", "Univariate DEA UGS Bootstrap max",
"Univariate DEA UGS Bootstrap standard 0.025 CI", "Univariate DEA UGS Bootstrap standard 0.975 CI",
"Univariate DEA UGS Bootstrap lower BCa CIboot", "Univariate DEA UGS Bootstrap upper BCa CIboot",
"Univariate DEA UGS Bootstrap biasboot", "Univariate DEA UGS Bootstrap accellerationboot",
"Univariate DEA UGS Bootstrap lower BCa CIjack", "Univariate DEA UGS Bootstrap upper BCa CIjack",
"Univariate DEA UGS Bootstrap biasjack", "Univariate DEA UGS Bootstrap accellerationjack",
"Standard DEB .5 Bootstrap mean", "Standard DEB .5 Bootstrap median", "Standard DEB .5 Bootstrap min",
"Standard DEB .5 Bootstrap max", "Standard DEB .5 Bootstrap standard 0.025 CI",
"Standard DEB .5 Bootstrap standard 0.975 CI", "Standard DEB .5 Bootstrap lower BCa CIboot",
"Standard DEB .5 Bootstrap upper BCa CIboot", "Standard DEB .5 Bootstrap biasboot",
"Standard DEB .5 Bootstrap accellerationboot", "Standard DEB .5 Bootstrap lower BCa CIjack",
"Standard DEB .5 Bootstrap upper BCa CIjack", "Standard DEB .5 Bootstrap biasjack",
"Standard DEB .5 Bootstrap accellerationjack", "Standard DEB 1 Bootstrap mean", "Standard DEB 1 Bootstrap median",
"Standard DEB 1 Bootstrap min", "Standard DEB 1 Bootstrap max", "Standard DEB 1 Bootstrap standard 0.025 CI",
"Standard DEB 1 Bootstrap standard 0.975 CI", "Standard DEB 1 Bootstrap lower BCa CIboot",
"Standard DEB 1 Bootstrap upper BCa CIboot", "Standard DEB 1 Bootstrap biasboot",
"Standard DEB 1 Bootstrap accellerationboot", "Standard DEB 1 Bootstrap lower BCa CIjack",
"Standard DEB 1 Bootstrap upper BCa CIjack", "Standard DEB 1 Bootstrap biasjack",
"Standard DEB 1 Bootstrap accellerationjack", "Univariate DEB .5 WGS Bootstrap mean",
"Univariate DEB .5 WGS Bootstrap median", "Univariate DEB .5 WGS Bootstrap min", "Univariate DEB .5 WGS Bootstrap max",
"Univariate DEB .5 WGS Bootstrap standard 0.025 CI", "Univariate DEB .5 WGS Bootstrap standard 0.975 CI",
"Univariate DEB .5 WGS Bootstrap lower BCa CIboot", "Univariate DEB .5 WGS Bootstrap upper BCa CIboot",
"Univariate DEB .5 WGS Bootstrap biasboot", "Univariate DEB .5 WGS Bootstrap accellerationboot",
"Univariate DEB .5 WGS Bootstrap lower BCa CIjack", "Univariate DEB .5 WGS Bootstrap upper BCa CIjack",
"Univariate DEB .5 WGS Bootstrap biasjack", "Univariate DEB .5 WGS Bootstrap accellerationjack",
"Univariate DEB 1 WGS Bootstrap mean", "Univariate DEB 1 WGS Bootstrap median", "Univariate DEB 1 WGS Bootstrap min",
"Univariate DEB 1 WGS Bootstrap max", "Univariate DEB 1 WGS Bootstrap standard 0.025 CI",
"Univariate DEB 1 WGS Bootstrap standard 0.975 CI", "Univariate DEB 1 WGS Bootstrap lower BCa CIboot",
"Univariate DEB 1 WGS Bootstrap upper BCa CIboot", "Univariate DEB 1 WGS Bootstrap biasboot",
"Univariate DEB 1 WGS Bootstrap accellerationboot", "Univariate DEB 1 WGS Bootstrap lower BCa CIjack",
"Univariate DEB 1 WGS Bootstrap upper BCa CIjack", "Univariate DEB 1 WGS Bootstrap biasjack",
"Univariate DEB 1 WGS Bootstrap accellerationjack", "Univariate DEB .5 UGS Bootstrap mean",
"Univariate DEB .5 UGS Bootstrap median", "Univariate DEB .5 UGS Bootstrap min", "Univariate DEB .5 UGS Bootstrap max",
"Univariate DEB .5 UGS Bootstrap standard 0.025 CI", "Univariate DEB .5 UGS Bootstrap standard 0.975 CI",
"Univariate DEB .5 UGS Bootstrap lower BCa CIboot", "Univariate DEB .5 UGS Bootstrap upper BCa CIboot",
"Univariate DEB .5 UGS Bootstrap biasboot", "Univariate DEB .5 UGS Bootstrap accellerationboot",
"Univariate DEB .5 UGS Bootstrap lower BCa CIjack", "Univariate DEB .5 UGS Bootstrap upper BCa CIjack",
"Univariate DEB .5 UGS Bootstrap biasjack", "Univariate DEB .5 UGS Bootstrap accellerationjack",
"Univariate DEB 1 UGS Bootstrap mean", "Univariate DEB 1 UGS Bootstrap median", "Univariate DEB 1 UGS Bootstrap min",
"Univariate DEB 1 UGS Bootstrap max", "Univariate DEB 1 UGS Bootstrap standard 0.025 CI",
"Univariate DEB 1 UGS Bootstrap standard 0.975 CI", "Univariate DEB 1 UGS Bootstrap lower BCa CIboot",
"Univariate DEB 1 UGS Bootstrap upper BCa CIboot", "Univariate DEB 1 UGS Bootstrap biasboot",
"Univariate DEB 1 UGS Bootstrap accellerationboot", "Univariate DEB 1 UGS Bootstrap lower BCa CIjack",
"Univariate DEB 1 UGS Bootstrap upper BCa CIjack", "Univariate DEB 1 UGS Bootstrap biasjack",
"Univariate DEB 1 UGS Bootstrap accellerationjack", "a2", "c2", "MZ", "DZ")
UpperIntervals<-(regexpr("upper BCa CIjack", columnNames, ignore.case = T)>0)+ (regexpr("standard 0.975", columnNames)>0)+(regexpr("Upper", columnNames, ignore.case = F)>0)
LowerIntervals<-(regexpr("lower BCa CIjack", columnNames, ignore.case = T)>0)+ (regexpr("standard 0.025", columnNames)>0)+(regexpr("Lower", columnNames, ignore.case = F)>0)
width<-function(data,UpperIntervals,LowerIntervals){
Upper<-data[,UpperIntervals==1]
Lower<-data[,LowerIntervals==1]
widths<-Upper-Lower
widths<-apply(widths,2,mean)
cols<-names(widths)
cols<-sub("upper","width",cols)
cols<-sub("0.975", "width", cols)
names(widths)<-cols
return(widths)
}
sumna<-function(data){
data<-sum(na.omit(data))/length(na.omit(data))
}
PopInside<-function(data, UpperIntervals, LowerIntervals,pop){
Upper<-data[,UpperIntervals==1]
Lower<-data[,LowerIntervals==1]
reps<-nrow(Upper)
Upper<-pop<=Upper
Lower<-pop>=Lower
inside<-Upper==Lower
inside<-apply(inside,2,sumna)
#inside<-inside/reps
cols<-names(inside)
cols<-sub("upper","coverage",cols)
cols<-sub("0.975", "coverage", cols)
names(inside)<-cols
return(inside)
}
resultschi10<-c()
test<-list(1:6)
chi10<-c()
namesforlist<-c()
for(i in c(1)){
namesforlist<-c(namesforlist,paste("chi10", ac[i,1],ac[i,2],ac[i,3],ac[i,4], sep=""))
}
for(i in c(1)){
tmp<-paste("chi10", ac[i,1],ac[i,2],ac[i,3],ac[i,4], sep="")
test[[i]]<-simulationresults
test[[i]]<-do.call(rbind,test[[i]])
colnames(test[[i]])<-columnNames
resultschi10<-rbind(resultschi10,c(PopInside(test[[i]][rownames(test[[i]])=="a2",],UpperIntervals, LowerIntervals, pop=ac[i,1]),tmp,"a2"))
resultschi10<-rbind(resultschi10,c(PopInside(test[[i]][rownames(test[[i]])=="c2",],UpperIntervals, LowerIntervals, pop=ac[i,2]),tmp,"c2"))
chi10<-rbind(chi10,test[[i]])
}
colnames(resultschi10)[21:22]<-c("condition","parameter")
resultschi10[,1:20]<-apply(resultschi10[,1:20], 2, as.numeric)
resultschi10<-as.data.frame(resultschi10)
#resultschi10$condition<-c(1:nrow(resultschi10))
plot<-function(data,ac){
dataused<-paste(deparse(substitute(data)),"[",deparse(substitute(data)),"$parameter=='",ac,"',]", sep="")
base<-paste("plot_ly(data=",dataused,", x=",dataused,"$condition)%>%
add_lines(y=0.95, name='nominal', color=I('black'))%>%",sep="")
names<-colnames(data)
colors<-rainbow_hcl(length(names)-1)
i<-1
while (i <length(names)-2){
base<-paste(base, "
add_markers(y=",dataused,"$`",names[i], "`,name='",names[i],"',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
add_lines(y=mean(na.omit(",dataused,"$`",names[i], "`)),name='",names[i]," line',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%", sep="")
i<-i+1
}
base<-paste(base, "
add_markers(y=",dataused,"$`",names[i], "`,name='",names[i],"',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
add_lines(y=mean(na.omit(",dataused,"$`",names[i], "`)),name='",names[i]," line',legendgroup='",names[i],"', color=I('",colors[i],"'))%>%
layout(title='",deparse(substitute(data)),ac,"')", sep="")
return(base)
}
chi10Plota2<-eval(parse(text=plot(resultschi10,"a2")))
chi10Plotc2<-eval(parse(text=plot(resultschi10,"c2")))
subplot(chi10Plota2, chi10Plotc2, nrows=1, shareY = T)
warnings
warnings()
chi10Plota2<-eval(parse(text=plot(resultschi10,"a2")))
warnings()
resultschi10[,1:20]<-apply(resultschi10[,1:20], 2, as.numeric)
resultschi10<-as.data.frame(resultschi10)
chi10Plota2<-eval(parse(text=plot(resultschi10,"a2")))
chi10Plotc2<-eval(parse(text=plot(resultschi10,"c2")))
subplot(chi10Plota2, chi10Plotc2, nrows=1, shareY = T)
